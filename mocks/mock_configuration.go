// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/reaction-eng/restlib/configuration (interfaces: Configuration)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	configuration "github.com/reaction-eng/restlib/configuration"
	reflect "reflect"
)

// MockConfiguration is a mock of Configuration interface
type MockConfiguration struct {
	ctrl     *gomock.Controller
	recorder *MockConfigurationMockRecorder
}

// MockConfigurationMockRecorder is the mock recorder for MockConfiguration
type MockConfigurationMockRecorder struct {
	mock *MockConfiguration
}

// NewMockConfiguration creates a new mock instance
func NewMockConfiguration(ctrl *gomock.Controller) *MockConfiguration {
	mock := &MockConfiguration{ctrl: ctrl}
	mock.recorder = &MockConfigurationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConfiguration) EXPECT() *MockConfigurationMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockConfiguration) Get(arg0 string) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// Get indicates an expected call of Get
func (mr *MockConfigurationMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockConfiguration)(nil).Get), arg0)
}

// GetBool mocks base method
func (m *MockConfiguration) GetBool(arg0 string, arg1 bool) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBool", arg0, arg1)
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetBool indicates an expected call of GetBool
func (mr *MockConfigurationMockRecorder) GetBool(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBool", reflect.TypeOf((*MockConfiguration)(nil).GetBool), arg0, arg1)
}

// GetConfig mocks base method
func (m *MockConfiguration) GetConfig(arg0 string) configuration.Configuration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfig", arg0)
	ret0, _ := ret[0].(configuration.Configuration)
	return ret0
}

// GetConfig indicates an expected call of GetConfig
func (mr *MockConfigurationMockRecorder) GetConfig(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfig", reflect.TypeOf((*MockConfiguration)(nil).GetConfig), arg0)
}

// GetFatal mocks base method
func (m *MockConfiguration) GetFatal(arg0 string) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFatal", arg0)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// GetFatal indicates an expected call of GetFatal
func (mr *MockConfigurationMockRecorder) GetFatal(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFatal", reflect.TypeOf((*MockConfiguration)(nil).GetFatal), arg0)
}

// GetFloat mocks base method
func (m *MockConfiguration) GetFloat(arg0 string) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFloat", arg0)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFloat indicates an expected call of GetFloat
func (mr *MockConfigurationMockRecorder) GetFloat(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFloat", reflect.TypeOf((*MockConfiguration)(nil).GetFloat), arg0)
}

// GetInt mocks base method
func (m *MockConfiguration) GetInt(arg0 string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInt", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInt indicates an expected call of GetInt
func (mr *MockConfigurationMockRecorder) GetInt(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInt", reflect.TypeOf((*MockConfiguration)(nil).GetInt), arg0)
}

// GetIntFatal mocks base method
func (m *MockConfiguration) GetIntFatal(arg0 string) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIntFatal", arg0)
	ret0, _ := ret[0].(int)
	return ret0
}

// GetIntFatal indicates an expected call of GetIntFatal
func (mr *MockConfigurationMockRecorder) GetIntFatal(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIntFatal", reflect.TypeOf((*MockConfiguration)(nil).GetIntFatal), arg0)
}

// GetKeys mocks base method
func (m *MockConfiguration) GetKeys() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKeys")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetKeys indicates an expected call of GetKeys
func (mr *MockConfigurationMockRecorder) GetKeys() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKeys", reflect.TypeOf((*MockConfiguration)(nil).GetKeys))
}

// GetString mocks base method
func (m *MockConfiguration) GetString(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetString", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetString indicates an expected call of GetString
func (mr *MockConfigurationMockRecorder) GetString(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetString", reflect.TypeOf((*MockConfiguration)(nil).GetString), arg0)
}

// GetStringArray mocks base method
func (m *MockConfiguration) GetStringArray(arg0 string) []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStringArray", arg0)
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetStringArray indicates an expected call of GetStringArray
func (mr *MockConfigurationMockRecorder) GetStringArray(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStringArray", reflect.TypeOf((*MockConfiguration)(nil).GetStringArray), arg0)
}

// GetStringError mocks base method
func (m *MockConfiguration) GetStringError(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStringError", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStringError indicates an expected call of GetStringError
func (mr *MockConfigurationMockRecorder) GetStringError(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStringError", reflect.TypeOf((*MockConfiguration)(nil).GetStringError), arg0)
}

// GetStringFatal mocks base method
func (m *MockConfiguration) GetStringFatal(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStringFatal", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetStringFatal indicates an expected call of GetStringFatal
func (mr *MockConfigurationMockRecorder) GetStringFatal(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStringFatal", reflect.TypeOf((*MockConfiguration)(nil).GetStringFatal), arg0)
}

// GetStruct mocks base method
func (m *MockConfiguration) GetStruct(arg0 string, arg1 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStruct", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetStruct indicates an expected call of GetStruct
func (mr *MockConfigurationMockRecorder) GetStruct(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStruct", reflect.TypeOf((*MockConfiguration)(nil).GetStruct), arg0, arg1)
}
