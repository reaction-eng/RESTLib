// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/reaction-eng/restlib/roles (interfaces: PermissionTable)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPermissionTable is a mock of PermissionTable interface
type MockPermissionTable struct {
	ctrl     *gomock.Controller
	recorder *MockPermissionTableMockRecorder
}

// MockPermissionTableMockRecorder is the mock recorder for MockPermissionTable
type MockPermissionTableMockRecorder struct {
	mock *MockPermissionTable
}

// NewMockPermissionTable creates a new mock instance
func NewMockPermissionTable(ctrl *gomock.Controller) *MockPermissionTable {
	mock := &MockPermissionTable{ctrl: ctrl}
	mock.recorder = &MockPermissionTableMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPermissionTable) EXPECT() *MockPermissionTableMockRecorder {
	return m.recorder
}

// GetPermissions mocks base method
func (m *MockPermissionTable) GetPermissions(arg0 int) []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPermissions", arg0)
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetPermissions indicates an expected call of GetPermissions
func (mr *MockPermissionTableMockRecorder) GetPermissions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPermissions", reflect.TypeOf((*MockPermissionTable)(nil).GetPermissions), arg0)
}

// LookUpRoleId mocks base method
func (m *MockPermissionTable) LookUpRoleId(arg0 string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LookUpRoleId", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LookUpRoleId indicates an expected call of LookUpRoleId
func (mr *MockPermissionTableMockRecorder) LookUpRoleId(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LookUpRoleId", reflect.TypeOf((*MockPermissionTable)(nil).LookUpRoleId), arg0)
}
